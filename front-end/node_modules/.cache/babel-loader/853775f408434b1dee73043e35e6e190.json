{"ast":null,"code":"import _classCallCheck from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/src/views/Registro.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Form, Icon, Input, Button, Row, Col, Modal, Checkbox } from 'antd';\nimport loginImage from '../images/stte.png';\nimport logo from '../images/logo.png';\nimport API from \"../tools/API\";\nimport Notifications from \"../tools/Notifications\";\n\nvar Registro =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Registro, _Component);\n\n  function Registro(props) {\n    var _this;\n\n    _classCallCheck(this, Registro);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Registro).call(this, props));\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      {\n        /* Método que compara la contraseña de confirmación con la\n        primera contraseña*/\n      }\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        {\n          /* Obtiene el valor del campo y lo compara*/\n        }\n        callback('La contraseña no coincide con la introducida previamente');\n        {\n          /* Si hay un error, manda el mensaje */\n        }\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (error, values) {\n        if (!error) {\n          _this.setState({\n            loading: true\n          });\n\n          API.call('registro-estudiante/', {\n            nombre: values.name,\n            apellido: values.lastName,\n            email: values.userName,\n            password: values.password\n          }, function (response) {\n            if (response === 1) {\n              {\n                /* Valida que todos los campos hayan sido llenados */\n              }\n              Notifications.openNotificationWithIcon(\"success\", \"Tu cuenta ha sido creada con éxito\", \"\");\n              API.redirectTo('/');\n            }\n\n            {\n              /* Creada la cuenta con éxito redirige a la página de Login */\n            }\n\n            _this.setState({\n              loading: false\n            });\n          }, function (response) {\n            _this.setState({\n              loading: false\n            });\n          }, false);\n        }\n      });\n    };\n\n    _this.state = {\n      confirmDirty: false,\n      loading: false,\n      warning: false,\n      redirect: false\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleConfirmBlur = _this.handleConfirmBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.compareToFirstPassword = _this.compareToFirstPassword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateToNextPassword = _this.validateToNextPassword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Registro, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 0,\n        sm: 0,\n        md: 0,\n        lg: 12,\n        xl: 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-image-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"login-image\",\n        src: loginImage,\n        alt: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 12,\n        xl: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form lform\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"logo-image-container-registro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"logo-image-registro\",\n        src: logo,\n        alt: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        className: \"restore-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"admin-login-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Registro de nueva cuenta\")), React.createElement(Row, {\n        gutter: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, getFieldDecorator('name', {\n        rules: [{\n          required: true,\n          message: 'Por favor ingresa tu nombre'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }),\n        placeholder: \"Nombre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, getFieldDecorator('lastName', {\n        rules: [{\n          required: true,\n          message: 'Por favor ingresa tus apellidos'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }),\n        placeholder: \"Apellidos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, getFieldDecorator('userName', {\n        rules: [{\n          required: true,\n          message: 'Por favor ingresa tu correo electrónico institucional (A0....@itesm.mx)'\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }),\n        placeholder: \"Correo electr\\xF3nico institucional (A0...@itesm.mx)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        gutter: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Por favor ingresa la contraseña'\n        },, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, getFieldDecorator('passwordVerification', {\n        rules: [{\n          required: true,\n          message: 'Por favor verifica la contraseña'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        prefix: React.createElement(Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Verificar contrase\\xF1a\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }))))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        href: 'https://tec.mx/es/aviso-de-privacidad-alumnos',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Aviso de privacidad\"), getFieldDecorator('remember', {\n        valuePropName: 'checked',\n        initialValue: false,\n        rules: [{\n          required: true,\n          message: 'Para continuar tienes que aceptar términos y condiciones'\n        }, {\n          validator: function validator(rule, value, cb) {\n            value === true ? cb() : cb(true);\n          },\n          message: 'Para continuar tienes que aceptar términos y condiciones'\n        }]\n      })(React.createElement(Checkbox, {\n        className: \"aviso-privacidad\",\n        checked: this.state.rememberMe,\n        onChange: this.handleChangeCheck,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"He le\\xEDdo y acepto el aviso de privacidad\"))), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        loading: this.state.loading,\n        disabled: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Crear cuenta\"))))));\n    }\n  }]);\n\n  return Registro;\n}(Component);\n\nvar WrappedNormalRegisterForm = Form.create({\n  name: 'restablecer'\n})(Registro);\nexport default WrappedNormalRegisterForm;","map":{"version":3,"sources":["/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/src/views/Registro.js"],"names":["React","Component","Form","Icon","Input","Button","Row","Col","Modal","Checkbox","loginImage","logo","API","Notifications","Registro","props","handleConfirmBlur","e","value","target","setState","confirmDirty","state","compareToFirstPassword","rule","callback","form","getFieldValue","validateToNextPassword","validateFields","force","handleSubmit","preventDefault","error","values","loading","call","nombre","name","apellido","lastName","email","userName","password","response","openNotificationWithIcon","redirectTo","warning","redirect","bind","getFieldDecorator","rules","required","message","color","validator","valuePropName","initialValue","cb","rememberMe","handleChangeCheck","WrappedNormalRegisterForm","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport {\n    Form, Icon, Input, Button, Row, Col, Modal, Checkbox\n} from 'antd';\nimport loginImage from '../images/stte.png';\nimport logo from '../images/logo.png';\nimport API from \"../tools/API\";\nimport Notifications from \"../tools/Notifications\";\n\nclass Registro extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            confirmDirty: false,\n            loading: false,\n            warning: false,\n            redirect:false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleConfirmBlur = this.handleConfirmBlur.bind(this);\n        this.compareToFirstPassword = this.compareToFirstPassword.bind(this);\n        this.validateToNextPassword = this.validateToNextPassword.bind(this);\n    }\n\n    handleConfirmBlur = (e) => {\n        const value = e.target.value;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n    compareToFirstPassword = (rule, value, callback) => { {/* Método que compara la contraseña de confirmación con la\n     primera contraseña*/}\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) { {/* Obtiene el valor del campo y lo compara*/}\n            callback('La contraseña no coincide con la introducida previamente'); {/* Si hay un error, manda el mensaje */}\n        } else {\n            callback();\n        }\n    };\n\n    validateToNextPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    };\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((error, values) => {\n          if (!error) {\n              this.setState({ loading: true, });\n              API.call('registro-estudiante/',{nombre: values.name, apellido: values.lastName, email: values.userName, password:values.password}, (response) => {\n                  if(response === 1) { {/* Valida que todos los campos hayan sido llenados */}\n                      Notifications.openNotificationWithIcon(\"success\",\"Tu cuenta ha sido creada con éxito\",\"\");\n                      API.redirectTo('/')\n                  } {/* Creada la cuenta con éxito redirige a la página de Login */}\n                  this.setState({ loading: false, });\n              }, (response) => {this.setState({ loading: false, });},false);\n          }\n        });\n      };\n\n    render() {\n\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <div >\n                <Row>\n                    {/* Formulario de registro */}\n                <Col xs={0} sm={0} md={0} lg={12} xl={14}>\n                    <div className=\"login-image-container\">\n                    <img className=\"login-image\" src={loginImage} alt={''}/>\n                    </div>\n                </Col>\n                <Col xs={24} sm={24} md={24} lg={12} xl={10}>\n                    <Form onSubmit={this.handleSubmit} className=\"login-form lform\">\n                    <div className=\"logo-image-container-registro\">\n                        <img className=\"logo-image-registro\" src={logo} alt={''}/>\n                    </div>\n                    <Form.Item className=\"restore-title\">\n                        <h2 className=\"admin-login-title\">Registro de nueva cuenta</h2>\n                    </Form.Item>\n                        <Row gutter={8}>\n                            <Col span={12}>\n                    <Form.Item>\n                        {getFieldDecorator('name', {\n                        rules: [{ required: true, message: 'Por favor ingresa tu nombre' }],\n                        })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Nombre\" />\n                        )}\n                    </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                    <Form.Item>\n                        {getFieldDecorator('lastName', {\n                        rules: [{ required: true, message: 'Por favor ingresa tus apellidos' }],\n                        })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Apellidos\" />\n                        )}\n                    </Form.Item>\n                            </Col>\n                        </Row>\n                    <Form.Item>\n                        {getFieldDecorator('userName', {\n                        rules: [{ required: true, message: 'Por favor ingresa tu correo electrónico institucional (A0....@itesm.mx)' }],\n                        })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Correo electrónico institucional (A0...@itesm.mx)\" />\n                        )}\n                    </Form.Item>\n                        <Row gutter={8}>\n                            <Col span={12}>\n                    <Form.Item>\n                        {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Por favor ingresa la contraseña' }, ,\n                            {validator: this.validateToNextPassword,}],\n                        })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Contraseña\" />\n                        )}\n                    </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                    <Form.Item>\n                        {getFieldDecorator('passwordVerification', {\n                        rules: [{ required: true, message: 'Por favor verifica la contraseña' }, {\n                            validator: this.compareToFirstPassword,\n                        }],\n                        })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Verificar contraseña\" onBlur={this.handleConfirmBlur}/>\n                        )}\n                    </Form.Item>\n                            </Col>\n                        </Row>\n                        <Form.Item>\n                            <a target={\"_blank\"} href={'https://tec.mx/es/aviso-de-privacidad-alumnos'}>Aviso de privacidad</a>\n                            {getFieldDecorator('remember', {\n                                valuePropName: 'checked',\n                                initialValue: false,\n                                rules: [{ required: true, message: 'Para continuar tienes que aceptar términos y condiciones' },{\n                                    validator: (rule, value, cb) => {value === true ? cb() : cb(true)},\n                                    message: 'Para continuar tienes que aceptar términos y condiciones'}]\n                            })\n                            (\n                                <Checkbox className=\"aviso-privacidad\" checked={this.state.rememberMe}\n                                          onChange={this.handleChangeCheck}>He leído y acepto el aviso de privacidad</Checkbox>\n                            )}\n                        </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"\n                                loading={this.state.loading} disabled={this.state.loading}>\n                            Crear cuenta\n                        </Button> \n                    </Form.Item>\n                    </Form>\n                </Col>\n                </Row>\n            </div> \n        );\n    }\n}\n\nconst WrappedNormalRegisterForm = Form.create({ name: 'restablecer' })(Registro);\nexport default WrappedNormalRegisterForm;"]},"metadata":{},"sourceType":"module"}