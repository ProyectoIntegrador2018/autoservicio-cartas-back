{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _icon = require('antd/lib/icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _tag = require('antd/lib/tag');\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar styles = {\n  'tagSelect': 'antd-pro-tag-select-tagSelect',\n  'ant-tag': 'antd-pro-tag-select-ant-tag',\n  'expanded': 'antd-pro-tag-select-expanded',\n  'trigger': 'antd-pro-tag-select-trigger',\n  'hasExpandTag': 'antd-pro-tag-select-hasExpandTag'\n};\nvar CheckableTag = _tag2.default.CheckableTag;\n\nvar TagSelectOption = function TagSelectOption(_ref) {\n  var children = _ref.children,\n      checked = _ref.checked,\n      _onChange = _ref.onChange,\n      value = _ref.value;\n  return _react2.default.createElement(CheckableTag, {\n    checked: checked,\n    key: value,\n    onChange: function onChange(state) {\n      return _onChange(value, state);\n    }\n  }, children);\n};\n\nTagSelectOption.isTagSelectOption = true;\nvar TagSelect = (_temp = _class = function (_Component) {\n  _inherits(TagSelect, _Component);\n\n  function TagSelect(props) {\n    _classCallCheck(this, TagSelect);\n\n    var _this = _possibleConstructorReturn(this, (TagSelect.__proto__ || Object.getPrototypeOf(TagSelect)).call(this, props));\n\n    _this.onChange = function (value) {\n      var onChange = _this.props.onChange;\n\n      if (!('value' in _this.props)) {\n        _this.setState({\n          value: value\n        });\n      }\n\n      if (onChange) {\n        onChange(value);\n      }\n    };\n\n    _this.onSelectAll = function (checked) {\n      var checkedTags = [];\n\n      if (checked) {\n        checkedTags = _this.getAllTags();\n      }\n\n      _this.onChange(checkedTags);\n    };\n\n    _this.handleTagChange = function (value, checked) {\n      var StateValue = _this.state.value;\n      var checkedTags = [].concat(_toConsumableArray(StateValue));\n      var index = checkedTags.indexOf(value);\n\n      if (checked && index === -1) {\n        checkedTags.push(value);\n      } else if (!checked && index > -1) {\n        checkedTags.splice(index, 1);\n      }\n\n      _this.onChange(checkedTags);\n    };\n\n    _this.handleExpand = function () {\n      var expand = _this.state.expand;\n\n      _this.setState({\n        expand: !expand\n      });\n    };\n\n    _this.isTagSelectOption = function (node) {\n      return node && node.type && (node.type.isTagSelectOption || node.type.displayName === 'TagSelectOption');\n    };\n\n    _this.state = {\n      expand: false,\n      value: props.value || props.defaultValue || []\n    };\n    return _this;\n  }\n\n  _createClass(TagSelect, [{\n    key: 'getAllTags',\n    value: function getAllTags() {\n      var _this2 = this;\n\n      var children = this.props.children;\n      children = _react2.default.Children.toArray(children);\n      var checkedTags = children.filter(function (child) {\n        return _this2.isTagSelectOption(child);\n      }).map(function (child) {\n        return child.props.value;\n      });\n      return checkedTags || [];\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _classNames,\n          _this3 = this;\n\n      var _state = this.state,\n          value = _state.value,\n          expand = _state.expand;\n      var _props = this.props,\n          children = _props.children,\n          hideCheckAll = _props.hideCheckAll,\n          className = _props.className,\n          style = _props.style,\n          expandable = _props.expandable,\n          actionsText = _props.actionsText;\n      var checkedAll = this.getAllTags().length === value.length;\n\n      var _ref2 = actionsText === null ? {} : actionsText,\n          _ref2$expandText = _ref2.expandText,\n          expandText = _ref2$expandText === undefined ? 'Expand' : _ref2$expandText,\n          _ref2$collapseText = _ref2.collapseText,\n          collapseText = _ref2$collapseText === undefined ? 'Collapse' : _ref2$collapseText,\n          _ref2$selectAllText = _ref2.selectAllText,\n          selectAllText = _ref2$selectAllText === undefined ? 'All' : _ref2$selectAllText;\n\n      var cls = (0, _classnames2.default)(styles.tagSelect, className, (_classNames = {}, _defineProperty(_classNames, styles.hasExpandTag, expandable), _defineProperty(_classNames, styles.expanded, expand), _classNames));\n      return _react2.default.createElement('div', {\n        className: cls,\n        style: style\n      }, hideCheckAll ? null : _react2.default.createElement(CheckableTag, {\n        checked: checkedAll,\n        key: 'tag-select-__all__',\n        onChange: this.onSelectAll\n      }, selectAllText), value && _react2.default.Children.map(children, function (child) {\n        if (_this3.isTagSelectOption(child)) {\n          return _react2.default.cloneElement(child, {\n            key: 'tag-select-' + child.props.value,\n            value: child.props.value,\n            checked: value.indexOf(child.props.value) > -1,\n            onChange: _this3.handleTagChange\n          });\n        }\n\n        return child;\n      }), expandable && _react2.default.createElement('a', {\n        className: styles.trigger,\n        onClick: this.handleExpand\n      }, expand ? collapseText : expandText, ' ', _react2.default.createElement(_icon2.default, {\n        type: expand ? 'up' : 'down'\n      })));\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('value' in nextProps) {\n        return {\n          value: nextProps.value || []\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return TagSelect;\n}(_react.Component), _class.propTypes = {\n  actionsText: _propTypes2.default.object,\n  hideCheckAll: _propTypes2.default.bool\n}, _class.defaultProps = {\n  hideCheckAll: false,\n  actionsText: {\n    expandText: 'Expand',\n    collapseText: 'Collapse',\n    selectAllText: 'All'\n  }\n}, _temp);\nTagSelect.Option = TagSelectOption;\nexports.default = TagSelect;\nmodule.exports = exports.default;","map":null,"metadata":{},"sourceType":"script"}