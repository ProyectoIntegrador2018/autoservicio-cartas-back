{"ast":null,"code":"import _classCallCheck from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/src/views/Alumnos.js\";\nimport React, { Component } from 'react';\nimport { Icon, Button, Modal } from 'antd';\nimport DataTable from \"../components/DataTable\";\nimport API from \"../tools/API\";\nimport moment from 'moment';\n\nvar Alumnos =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Alumnos, _Component);\n\n  function Alumnos(props) {\n    var _this;\n\n    _classCallCheck(this, Alumnos);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Alumnos).call(this, props));\n\n    _this.refreshData = function () {\n      _this.setState({\n        loading: true\n      });\n\n      API.restCall({\n        service: 'return_student_list/',\n        method: \"get\",\n        params: \"\",\n        success: function success(response) {\n          _this.setState({\n            data: response,\n            loading: false\n          });\n        },\n        error: function error(response) {\n          _this.setState({\n            loading: false\n          });\n        }\n      });\n    };\n\n    _this.deleteStudent = function (rows) {\n      {\n        /* Botón para eliminar a alumnos*/\n      }\n      {\n        /* Método que elimina a un alumno de la base de datos*/\n      }\n\n      _this.setState({\n        loading: true\n      });\n\n      API.call('eliminar_alumnos/', {\n        alumno: JSON.stringify(rows)\n      }, function (response) {\n        _this.setState({\n          loading: false\n        });\n\n        _this.refreshData();\n      }, function (response) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.showContent = function (record) {\n      var data = JSON.parse(record.contenido_subido);\n      {\n        /* Método que muestra el contenido de los alumnos\n        Mostrando nombre, apellido, email, y el último login*/\n      }\n\n      _this.setState({\n        cols: data.cols,\n        data2: data.data,\n        visible: true,\n        record: record\n      });\n    };\n\n    _this.state = {\n      data: [],\n      data2: [],\n      loading: true,\n      record: {},\n      cols: []\n    };\n    return _this;\n  }\n\n  _createClass(Alumnos, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.refreshData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      {\n        /*Tabla donde se muestra el contenido de los alumnos*/\n      }\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"team\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), \" Alumnos\"), React.createElement(DataTable, {\n        loading: this.state.loading,\n        data: this.state.data,\n        deleteFunc: this.deleteStudent,\n        rowSelection: true,\n        columns: [{\n          title: 'Nombre del alumno',\n          key: 'nombre'\n        }, {\n          title: 'Apellido',\n          key: 'apellido'\n        }, {\n          title: 'Email',\n          key: 'email'\n        }, {\n          title: 'Último login',\n          key: 'last_login',\n          render: function render(text, record) {\n            return React.createElement(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82\n              },\n              __self: this\n            }, moment(text).format('DD-MMM-YYYY')));\n          }\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Alumnos;\n}(Component);\n\nexport { Alumnos as default };","map":{"version":3,"sources":["/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/src/views/Alumnos.js"],"names":["React","Component","Icon","Button","Modal","DataTable","API","moment","Alumnos","props","refreshData","setState","loading","restCall","service","method","params","success","response","data","error","deleteStudent","rows","call","alumno","JSON","stringify","showContent","record","parse","contenido_subido","cols","data2","visible","state","title","key","render","text","textAlign","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Icon, Button, Modal\n} from 'antd';\nimport DataTable from \"../components/DataTable\";\nimport API from \"../tools/API\";\nimport moment from 'moment';\n\nexport default class Alumnos extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data:[],\n            data2:[],\n            loading:true,\n            record:{},\n            cols:[],\n        }\n    }\n\n    refreshData = () => {\n        this.setState({loading:true});\n        API.restCall({\n            service:'return_student_list/',\n\n            method: \"get\",\n            params: \"\",\n            success:(response) => {\n                this.setState({data: response, loading:false});\n            },\n            error:(response) => {this.setState({ loading: false });},\n        });\n    };\n\n    deleteStudent = (rows) => {\n        {/* Botón para eliminar a alumnos*/}\n        {/* Método que elimina a un alumno de la base de datos*/}\n        this.setState({loading:true});\n        API.call('eliminar_alumnos/',{alumno:JSON.stringify(rows)}, (response) => {\n            this.setState({ loading:false});\n            this.refreshData();\n        }, (response) => {this.setState({ loading:false})});\n    };\n\n    componentWillMount() {\n        this.refreshData();\n    };\n\n    showContent = (record) => {\n        let data = JSON.parse(record.contenido_subido);\n        {/* Método que muestra el contenido de los alumnos\n        Mostrando nombre, apellido, email, y el último login*/}\n        this.setState({cols:data.cols, data2:data.data, visible:true,record:record});\n    };\n\n    render() {\n        {/*Tabla donde se muestra el contenido de los alumnos*/}\n        return (\n\n            <div>\n                <h1><Icon type=\"team\" /> Alumnos</h1>\n                <DataTable loading={this.state.loading} data={this.state.data}\n                           deleteFunc={this.deleteStudent} rowSelection={true}\n                columns={[{\n                    title: 'Nombre del alumno',\n                    key: 'nombre',\n\n                }, {\n                    title: 'Apellido',\n                    key: 'apellido',\n\n                },{\n                    title: 'Email',\n                    key: 'email',\n\n                }, {\n                    title: 'Último login',\n                    key: 'last_login',\n                    render: (text, record) => (\n                        <div style={{textAlign:'center'}}>\n                            <div>{moment(text).format('DD-MMM-YYYY')}</div>\n                        </div>\n                    ),\n                }\n                ]}/>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}