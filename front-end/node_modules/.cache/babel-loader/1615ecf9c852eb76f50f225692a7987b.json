{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp, _initialiseProps;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction fixedZero(val) {\n  return val * 1 < 10 ? '0' + val : val;\n}\n\nvar initTime = function initTime(props) {\n  var lastTime = 0;\n  var targetTime = 0;\n\n  try {\n    if (Object.prototype.toString.call(props.target) === '[object Date]') {\n      targetTime = props.target.getTime();\n    } else {\n      targetTime = new Date(props.target).getTime();\n    }\n  } catch (e) {\n    throw new Error('invalid target prop', e);\n  }\n\n  lastTime = targetTime - new Date().getTime();\n  return {\n    lastTime: lastTime < 0 ? 0 : lastTime\n  };\n};\n\nvar CountDown = (_temp = _class = function (_Component) {\n  _inherits(CountDown, _Component);\n\n  function CountDown(props) {\n    _classCallCheck(this, CountDown);\n\n    var _this = _possibleConstructorReturn(this, (CountDown.__proto__ || Object.getPrototypeOf(CountDown)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var _initTime = initTime(props),\n        lastTime = _initTime.lastTime;\n\n    _this.state = {\n      lastTime: lastTime\n    };\n    return _this;\n  }\n\n  _createClass(CountDown, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.tick();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var target = this.props.target;\n\n      if (target !== prevProps.target) {\n        clearTimeout(this.timer);\n        this.tick();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      clearTimeout(this.timer);\n    } // defaultFormat = time => (\n    //  <span>{moment(time).format('hh:mm:ss')}</span>\n    // );\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          _props$format = _props.format,\n          format = _props$format === undefined ? this.defaultFormat : _props$format,\n          onEnd = _props.onEnd,\n          rest = _objectWithoutProperties(_props, ['format', 'onEnd']);\n\n      var lastTime = this.state.lastTime;\n      var result = format(lastTime);\n      return _react2.default.createElement('span', rest, result);\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, preState) {\n      var _initTime2 = initTime(nextProps),\n          lastTime = _initTime2.lastTime;\n\n      if (preState.lastTime !== lastTime) {\n        return {\n          lastTime: lastTime\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CountDown;\n}(_react.Component), _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.timer = 0;\n  this.interval = 1000;\n\n  this.defaultFormat = function (time) {\n    var hours = 60 * 60 * 1000;\n    var minutes = 60 * 1000;\n    var h = Math.floor(time / hours);\n    var m = Math.floor((time - h * hours) / minutes);\n    var s = Math.floor((time - h * hours - m * minutes) / 1000);\n    return _react2.default.createElement('span', null, fixedZero(h), ':', fixedZero(m), ':', fixedZero(s));\n  };\n\n  this.tick = function () {\n    var onEnd = _this2.props.onEnd;\n    var lastTime = _this2.state.lastTime;\n    _this2.timer = setTimeout(function () {\n      if (lastTime < _this2.interval) {\n        clearTimeout(_this2.timer);\n\n        _this2.setState({\n          lastTime: 0\n        }, function () {\n          if (onEnd) {\n            onEnd();\n          }\n        });\n      } else {\n        lastTime -= _this2.interval;\n\n        _this2.setState({\n          lastTime: lastTime\n        }, function () {\n          _this2.tick();\n        });\n      }\n    }, _this2.interval);\n  };\n}, _temp);\nexports.default = CountDown;\nmodule.exports = exports.default;","map":null,"metadata":{},"sourceType":"script"}