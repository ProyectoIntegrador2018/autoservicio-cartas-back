{"ast":null,"code":"import _defineProperty from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/src/views/ProcesoNuevo.js\";\nimport React, { Component } from 'react';\nimport { Icon, Upload, Form, Divider, Button, Input, Steps, Select, Switch, Row, Col, Modal } from 'antd';\nimport API from \"../tools/API\";\nimport Notifications from \"../tools/Notifications\";\n\nvar ProcesoNuevo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProcesoNuevo, _Component);\n\n  function ProcesoNuevo(props) {\n    var _this;\n\n    _classCallCheck(this, ProcesoNuevo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProcesoNuevo).call(this, props));\n\n    _this.refreshData = function () {};\n\n    _this.getColumnByKey = function (key) {\n      return _this.state.columns[key];\n    };\n\n    _this.uploadData = function () {\n      var params = {\n        nombre: _this.state.nombre,\n        matricula: _this.getColumnByKey(_this.state.matricula),\n        ticket: _this.getColumnByKey(_this.state.ticket),\n        ultima_actualizacion: _this.getColumnByKey(_this.state.ultima_actualizacion),\n        fecha_apertura: _this.getColumnByKey(_this.state.fecha_apertura),\n        pasos: _this.state.pasos\n      };\n\n      if (params.nombre == \"\" || params.matricula == \"\" || params.ticket == \"\" || params.ultima_actualizacion == \"\" || params.fecha_apertura == \"\" || params.pasos == \"\") {\n        Notifications.openNotificationWithIcon(\"warning\", \"Verifica que todos los campos estén completos\", \"\");\n      } else {\n        Modal.confirm({\n          title: 'Estos son los datos a subir:',\n          content: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, \"Nombre: \")), \" \", params.nombre, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, \"Columna de la matr\\xEDcula: \")), \"  \", params.matricula.title, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, \"Columna del ticket: \")), \"  \", params.ticket.title, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, \"Columna de fecha de apertura: \")), \"  \", params.fecha_apertura.title, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, \"Columna de \\xFAltima actualizaci\\xF3n: \")), \"  \", params.ultima_actualizacion.title, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, \"Pasos:\"), \" \"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }), React.createElement(Divider, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }), params.pasos.map(function (p) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }, React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }, \" \", React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }, \"Columna: \")), \" \", p.title, React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }), React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }, \" \", React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }, \"# de paso: \")), \" \", p.numero, React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }), React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }, \" \", React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }, \"Nombre a mostrar: \")), \" \", p.nombre_mostrar, React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }), React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            }, \" \", React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            }, \"Mostrar: \")), \" \", p.mostrar ? \"Sí\" : \"No\", React.createElement(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            }), React.createElement(Divider, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64\n              },\n              __self: this\n            }));\n          })),\n          onOk: function onOk() {\n            //console.log('OK');\n            params = {\n              nombre: _this.state.nombre,\n              matricula: JSON.stringify(_this.getColumnByKey(_this.state.matricula)),\n              ticket: JSON.stringify(_this.getColumnByKey(_this.state.ticket)),\n              ultima_actualizacion: JSON.stringify(_this.getColumnByKey(_this.state.ultima_actualizacion)),\n              fecha_apertura: JSON.stringify(_this.getColumnByKey(_this.state.fecha_apertura)),\n              pasos: JSON.stringify(_this.state.pasos)\n            };\n\n            _this.setState({\n              loading: true\n            });\n\n            console.log(_this.state.pasos);\n            API.call('agregar-proceso/', params, function (resposne) {\n              Notifications.openNotificationWithIcon(\"success\", \"¡Proceso nuevo creado exitosamente!\", \"\");\n              API.redirectTo('/procesos');\n\n              _this.setState({\n                loading: false\n              });\n            }, function (resposne) {\n              _this.setState({\n                loading: false\n              });\n            });\n          },\n          cancelText: \"Cancelar\",\n          onCancel: function onCancel() {//console.log('Cancel');\n          }\n        });\n      }\n    };\n\n    _this.parseFile = function (file) {\n      _this.setState({\n        fileName: file.name\n      });\n\n      var Papa = require(\"papaparse/papaparse.min.js\");\n\n      Papa.parse(file, {\n        header: false,\n        download: true,\n        skipEmptyLines: true,\n        complete: _this.updateData\n      });\n    };\n\n    _this.updateData = function (result) {\n      var data = result.data; // Here this is available and we can call this.setState (since it's binded in the constructor)\n      // or shorter ES syntax: this.setState({ data });\n\n      var columns = [];\n\n      for (var i = 0; i < data[0].length; i++) {\n        columns.push({\n          key: i,\n          title: i + 1 + \" | \" + data[0][i],\n          nombre: data[0][i]\n        });\n      }\n\n      _this.setState({\n        columns: columns\n      });\n    };\n\n    _this.handleSelect = function (name, keyvalue) {\n      _this.setState(_defineProperty({}, name, keyvalue));\n    };\n\n    _this.add = function () {\n      _this.state.pasos.push({\n        nombre: \"\",\n        columna_csv: \"\",\n        nombre_mostrar: \"\",\n        mostrar: true,\n        numero: _this.state.pasos.length + 1,\n        title: \"\"\n      });\n\n      _this.setState({\n        pasos: _this.state.pasos\n      });\n    };\n\n    _this.remove = function () {\n      _this.state.pasos.splice(-1, 1);\n\n      _this.setState({\n        pasos: _this.state.pasos\n      });\n    };\n\n    _this.edit = function (index, campo, value) {\n      var pasos = _this.state.pasos;\n\n      if (campo === 'columna_csv') {\n        var c = _this.getColumnByKey(value);\n\n        pasos[index][campo] = value;\n        pasos[index].nombre = c.nombre;\n        pasos[index].title = c.title;\n      } else {\n        pasos[index][campo] = value;\n      }\n\n      _this.setState({\n        pasos: pasos\n      });\n    };\n\n    _this.state = {\n      loading: false,\n      columns: [],\n      disabled: true,\n      matricula: \"\",\n      ticket: \"\",\n      ultima_actualizacion: \"\",\n      fecha_apertura: \"\",\n      pasos: []\n    };\n    return _this;\n  }\n\n  _createClass(ProcesoNuevo, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.refreshData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Proceso nuevo\"), React.createElement(Form.Item, {\n        label: \"Nombre del proceso: \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: 'text',\n        onChange: function onChange(e) {\n          return _this2.handleSelect('nombre', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(Upload.Dragger, {\n        beforeUpload: function beforeUpload(file, fileList) {\n          _this2.parseFile(file);\n\n          return false;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"ant-upload-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Haz clic o arrastra un documento en esta \\xE1rea\"), React.createElement(\"p\", {\n        className: \"ant-upload-hint\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"El sistema solo soporta archivos CSV\")), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Selecci\\xF3n de columnas\"), React.createElement(Row, {\n        gutter: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Columna de la matr\\xEDcula: \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Select, {\n        style: {\n          width: '100%'\n        },\n        onChange: function onChange(value) {\n          return _this2.handleSelect('matricula', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, this.state.columns.map(function (element) {\n        return React.createElement(Select.Option, {\n          value: element.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, element.title);\n      })))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Columna de # de ticket: \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Select, {\n        style: {\n          width: '100%'\n        },\n        onChange: function onChange(value) {\n          return _this2.handleSelect('ticket', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, this.state.columns.map(function (element) {\n        return React.createElement(Select.Option, {\n          value: element.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, element.title);\n      }))))), React.createElement(Row, {\n        gutter: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Columna de fecha de apertura: \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Select, {\n        style: {\n          width: '100%'\n        },\n        onChange: function onChange(value) {\n          return _this2.handleSelect('fecha_apertura', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, this.state.columns.map(function (element) {\n        return React.createElement(Select.Option, {\n          value: element.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, element.title);\n      })))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Columna de fecha de \\xFAltima actualizaci\\xF3n:\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Select, {\n        style: {\n          width: '100%'\n        },\n        onChange: function onChange(value) {\n          return _this2.handleSelect('ultima_actualizacion', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, this.state.columns.map(function (element) {\n        return React.createElement(Select.Option, {\n          value: element.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, element.title);\n      }))))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Selecci\\xF3n de pasos\"), React.createElement(Form.Item, {\n        label: \"Columnas de pasos: \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Steps, {\n        direction: \"vertical\",\n        current: 1,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, this.state.pasos.map(function (k, index) {\n        return React.createElement(Steps.Step, {\n          key: index,\n          status: 'process',\n          style: {\n            width: '100%'\n          },\n          title: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217\n            },\n            __self: this\n          }, React.createElement(Row, {\n            gutter: 8,\n            style: {\n              width: '100%',\n              maxHeight: '50px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218\n            },\n            __self: this\n          }, React.createElement(Col, {\n            span: 3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 219\n            },\n            __self: this\n          }, React.createElement(Form.Item, {\n            label: \"Mostrar: \",\n            style: {\n              textAlign: 'center'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220\n            },\n            __self: this\n          }, React.createElement(Switch, {\n            defaultChecked: true,\n            onChange: function onChange(checked) {\n              return _this2.edit(index, 'mostrar', checked);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 221\n            },\n            __self: this\n          }))), React.createElement(Col, {\n            span: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224\n            },\n            __self: this\n          }, React.createElement(Form.Item, {\n            label: \"Columna: \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225\n            },\n            __self: this\n          }, React.createElement(Select, {\n            style: {\n              width: '100%',\n              marginRight: 15\n            },\n            onChange: function onChange(value) {\n              return _this2.edit(index, 'columna_csv', value);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226\n            },\n            __self: this\n          }, _this2.state.columns.map(function (element) {\n            return React.createElement(Select.Option, {\n              value: element.key,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 229\n              },\n              __self: this\n            }, element.title);\n          })))), React.createElement(Col, {\n            span: 10,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 235\n            },\n            __self: this\n          }, React.createElement(Form.Item, {\n            label: \"Nombre a mostrar: \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 236\n            },\n            __self: this\n          }, React.createElement(Input, {\n            placeholder: \"Paso\",\n            style: {\n              width: '100%',\n              marginRight: 15\n            },\n            onChange: function onChange(e) {\n              return _this2.edit(index, 'nombre_mostrar', e.target.value);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237\n            },\n            __self: this\n          }))), React.createElement(Col, {\n            span: 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241\n            },\n            __self: this\n          }, React.createElement(Form.Item, {\n            label: \" \",\n            colon: false,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: 'danger',\n            disabled: _this2.state.pasos.length - 1 !== index,\n            hidden: _this2.state.pasos.length - 1 !== index,\n            onClick: function onClick() {\n              return _this2.remove();\n            },\n            icon: \"minus-circle-o\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          })))), React.createElement(Divider, {\n            hidden: _this2.state.pasos.length - 1 === index,\n            styles: {\n              marginTop: \"12px\",\n              marginBottom: \"12px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252\n            },\n            __self: this\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"dashed\",\n        onClick: this.add,\n        style: {\n          width: '60%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), \" Agregar paso\"))), React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Button, {\n        loading: this.state.loading,\n        disabled: this.state.loading,\n        onClick: this.uploadData,\n        style: {\n          marginTop: 10\n        },\n        className: 'button-success',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: 'upload',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), \" Subir datos\")));\n    }\n  }]);\n\n  return ProcesoNuevo;\n}(Component);\n\nexport { ProcesoNuevo as default };","map":{"version":3,"sources":["/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/src/views/ProcesoNuevo.js"],"names":["React","Component","Icon","Upload","Form","Divider","Button","Input","Steps","Select","Switch","Row","Col","Modal","API","Notifications","ProcesoNuevo","props","refreshData","getColumnByKey","key","state","columns","uploadData","params","nombre","matricula","ticket","ultima_actualizacion","fecha_apertura","pasos","openNotificationWithIcon","confirm","title","content","map","p","numero","nombre_mostrar","mostrar","onOk","JSON","stringify","setState","loading","console","log","call","resposne","redirectTo","cancelText","onCancel","parseFile","file","fileName","name","Papa","require","parse","header","download","skipEmptyLines","complete","updateData","result","data","i","length","push","handleSelect","keyvalue","add","columna_csv","remove","splice","edit","index","campo","value","c","disabled","e","target","fileList","width","element","k","maxHeight","textAlign","checked","marginRight","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Icon, Upload, Form, Divider,Button, Input, Steps, Select,Switch, Row, Col, Modal\n} from 'antd';\nimport API from \"../tools/API\";\nimport Notifications from \"../tools/Notifications\";\n\nexport default class ProcesoNuevo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading:false,\n            columns: [],\n            disabled: true,\n            matricula:\"\",\n            ticket:\"\",\n            ultima_actualizacion:\"\",\n            fecha_apertura:\"\",\n            pasos:[]\n        }\n    }\n\n    refreshData = () => {};\n\n    componentWillMount() {\n        this.refreshData();\n    }\n\n    getColumnByKey = (key) => {\n        return this.state.columns[key];\n    };\n\n    uploadData = () => {\n\n        let params = {\n            nombre: this.state.nombre,\n            matricula:this.getColumnByKey(this.state.matricula),\n            ticket:this.getColumnByKey(this.state.ticket),\n            ultima_actualizacion:this.getColumnByKey(this.state.ultima_actualizacion),\n            fecha_apertura:this.getColumnByKey(this.state.fecha_apertura),\n            pasos:this.state.pasos\n        };\n\n        if (params.nombre == \"\" || params.matricula == \"\" || params.ticket == \"\" || params.ultima_actualizacion == \"\" ||\n            params.fecha_apertura == \"\" || params.pasos ==  \"\") {\n            Notifications.openNotificationWithIcon(\"warning\",\"Verifica que todos los campos estén completos\",\"\")\n        } else {\n            Modal.confirm({\n                title: 'Estos son los datos a subir:',\n                content: <div>\n                    <b><label>Nombre: </label></b> {params.nombre}<br/>\n                    <b><label>Columna de la matrícula: </label></b>  {params.matricula.title}<br/>\n                    <b><label>Columna del ticket: </label></b>  {params.ticket.title}<br/>\n                    <b><label>Columna de fecha de apertura: </label></b>  {params.fecha_apertura.title}<br/>\n                    <b><label>Columna de última actualización: </label></b>  {params.ultima_actualizacion.title}<br/>\n                    <h4><b>Pasos:</b> </h4><br/>\n                    <Divider/>\n                    {params.pasos.map((p) =><div>\n                        <b> <label>Columna: </label></b> {p.title}<br/>\n                        <b> <label># de paso: </label></b> {p.numero}<br/>\n                        <b> <label>Nombre a mostrar: </label></b> {p.nombre_mostrar }<br/>\n                        <b> <label>Mostrar: </label></b> {p.mostrar ? \"Sí\" : \"No\"}<br/>\n                        <Divider/>\n                    </div>)}\n                </div>,\n                onOk: () => {\n                    //console.log('OK');\n                    params = {\n                        nombre: this.state.nombre,\n                        matricula:JSON.stringify(this.getColumnByKey(this.state.matricula)),\n                        ticket:JSON.stringify(this.getColumnByKey(this.state.ticket)),\n                        ultima_actualizacion:JSON.stringify(this.getColumnByKey(this.state.ultima_actualizacion)),\n                        fecha_apertura:JSON.stringify(this.getColumnByKey(this.state.fecha_apertura)),\n                        pasos:JSON.stringify(this.state.pasos)\n                    };\n                    this.setState({loading:true});\n                    console.log(this.state.pasos)\n                    API.call('agregar-proceso/',params, (resposne) => {\n                        Notifications.openNotificationWithIcon(\"success\",\"¡Proceso nuevo creado exitosamente!\",\"\")\n                        API.redirectTo('/procesos');\n                        this.setState({loading:false});\n                    }, (resposne) => {this.setState({loading:false});});\n                },\n                cancelText:\"Cancelar\",\n                onCancel() {\n                    //console.log('Cancel');\n                }\n            }); \n        }\n    };\n\n    parseFile = (file) => {\n        this.setState({fileName:file.name});\n        let Papa = require(\"papaparse/papaparse.min.js\");\n        Papa.parse(file, {\n            header: false,\n            download: true,\n            skipEmptyLines: true,\n            complete: this.updateData\n        });\n    };\n\n    updateData = (result) => {\n        const data = result.data;\n        // Here this is available and we can call this.setState (since it's binded in the constructor)\n        // or shorter ES syntax: this.setState({ data });\n        let columns = [];\n        for (let i = 0; i < data[0].length; i++) {\n            columns.push({\n                key: i,\n                title: (i + 1) + \" | \" + data[0][i],\n                nombre: data[0][i],\n            });\n        }\n        this.setState({columns: columns});\n    };\n\n    handleSelect = (name, keyvalue) => {\n        this.setState({[name]:keyvalue});\n    };\n\n    add = () => {\n        this.state.pasos.push({nombre:\"\", columna_csv:\"\", nombre_mostrar:\"\", mostrar:true, numero:this.state.pasos.length + 1, title:\"\"});\n        this.setState({pasos: this.state.pasos});\n    };\n\n    remove = () => {\n        this.state.pasos.splice(-1,1);\n        this.setState({pasos: this.state.pasos});\n    };\n\n    edit = (index,campo, value) => {\n        let pasos = this.state.pasos;\n        if (campo === 'columna_csv') {\n            let c = this.getColumnByKey(value);\n            pasos[index][campo] = value;\n            pasos[index].nombre = c.nombre;\n            pasos[index].title = c.title;\n        } else {\n            pasos[index][campo] = value;\n        }\n\n        this.setState({pasos: pasos});\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Proceso nuevo</h2>\n                <Form.Item label=\"Nombre del proceso: \">\n                    <Input type={'text'} onChange={(e) => this.handleSelect('nombre',e.target.value)}/>\n                </Form.Item>\n                <Upload.Dragger\n                    beforeUpload={(file, fileList) => {this.parseFile(file);return false;}}>\n                    <p className=\"ant-upload-drag-icon\">\n                        <Icon type=\"upload\" />\n                    </p>\n                    <p className=\"ant-upload-text\">Haz clic o arrastra un documento en esta área</p>\n                    <p className=\"ant-upload-hint\">El sistema solo soporta archivos CSV</p>\n                </Upload.Dragger>\n\n                <Divider/>\n                <h2>Selección de columnas</h2>\n\n                <Row gutter={8}>\n                    <Col span={12}>\n                <Form.Item label=\"Columna de la matrícula: \">\n                    <Select style={{ width: '100%' }} onChange={(value) => this.handleSelect('matricula',value)}>\n                        {this.state.columns.map((element) => (\n                                <Select.Option value={element.key}>{element.title}</Select.Option>\n                            )\n                        )}\n                    </Select>\n                </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                <Form.Item label=\"Columna de # de ticket: \">\n                    <Select style={{ width: '100%' }} onChange={(value) => this.handleSelect('ticket',value)}>\n                        {this.state.columns.map((element) => (\n                                <Select.Option value={element.key}>{element.title}</Select.Option>\n                            )\n                        )}\n                    </Select>\n                </Form.Item>\n                    </Col>\n                </Row>\n                <Row gutter={8}>\n                    <Col span={12}>\n                <Form.Item label=\"Columna de fecha de apertura: \">\n                    <Select style={{ width: '100%' }} onChange={(value) => this.handleSelect('fecha_apertura',value)}>\n                        {this.state.columns.map((element) => (\n                                <Select.Option value={element.key}>{element.title}</Select.Option>\n                            )\n                        )}\n                    </Select>\n                </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                <Form.Item label=\"Columna de fecha de última actualización:\">\n                    <Select style={{ width: '100%' }} onChange={(value) => this.handleSelect('ultima_actualizacion',value)}>\n                        {this.state.columns.map((element) => (\n                                <Select.Option value={element.key}>{element.title}</Select.Option>\n                            )\n                        )}\n                    </Select>\n                </Form.Item>\n                    </Col>\n                </Row>\n                <Divider/>\n                <h2>Selección de pasos</h2>\n                <Form.Item label=\"Columnas de pasos: \">\n                    <Steps direction=\"vertical\" current={1} style={{ width: '100%' }}>\n                        {this.state.pasos.map((k, index) => (\n                            <Steps.Step key={index} status={'process'}  style={{ width: '100%' }}\n                            title={\n                                <div>\n                                <Row  gutter={8} style={{ width: '100%', maxHeight:'50px' }}>\n                                    <Col span={3}>\n                                        <Form.Item label=\"Mostrar: \" style={{textAlign:'center' }}>\n                                            <Switch defaultChecked onChange={(checked) => this.edit(index,'mostrar',checked)}/>\n                                        </Form.Item>\n                                    </Col>\n                                <Col span={10}>\n                                    <Form.Item label=\"Columna: \">\n                                        <Select style={{ width: '100%', marginRight: 15 }}\n                                                onChange={(value) => this.edit(index,'columna_csv',value)}>\n                                            {this.state.columns.map((element) => (\n                                                    <Select.Option value={element.key}>{element.title}</Select.Option>\n                                                )\n                                            )}\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={10}>\n                                    <Form.Item label=\"Nombre a mostrar: \">\n                                        <Input placeholder=\"Paso\" style={{ width: '100%', marginRight: 15 }}\n                                               onChange={(e) => this.edit(index,'nombre_mostrar',e.target.value)}/>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={1}>\n                                    <Form.Item label=\" \" colon={false}>\n                                        <Button type={'danger'}\n                                                disabled={this.state.pasos.length - 1 !== index}\n                                                hidden={this.state.pasos.length - 1 !== index}\n                                                onClick={() => this.remove()}\n                                                icon={\"minus-circle-o\"}/>\n                                    </Form.Item>\n\n                                </Col>\n                                </Row>\n                                <Divider hidden={this.state.pasos.length - 1 === index} styles={{marginTop:\"12px\",\n                                    marginBottom:\"12px\"}}/>\n                                </div>\n                            }>\n                            </Steps.Step>\n                        ))}\n                    </Steps>\n\n                    <div style={{textAlign:'center'}}>\n                        <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\n                            <Icon type=\"plus\" /> Agregar paso\n                        </Button>\n                    </div>\n                </Form.Item>\n                <div style={{textAlign:'right'}}>\n                    <Button loading={this.state.loading} disabled={this.state.loading} onClick={this.uploadData} style={{marginTop:10}} className={'button-success'}><Icon type={'upload'}/> Subir datos</Button>\n                </div>\n\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}