{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.getBreadcrumb = undefined;\n\nvar _breadcrumb = require('antd/lib/breadcrumb');\n\nvar _breadcrumb2 = _interopRequireDefault(_breadcrumb);\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _pathToRegexp = require('path-to-regexp');\n\nvar _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);\n\nvar _pathTools = require('../_utils/pathTools');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar styles = {\n  'pageHeader': 'antd-pro-page-header-pageHeader',\n  'wide': 'antd-pro-page-header-wide',\n  'detail': 'antd-pro-page-header-detail',\n  'row': 'antd-pro-page-header-row',\n  'breadcrumb': 'antd-pro-page-header-breadcrumb',\n  'tabs': 'antd-pro-page-header-tabs',\n  'ant-tabs-bar': 'antd-pro-page-header-ant-tabs-bar',\n  'logo': 'antd-pro-page-header-logo',\n  'title': 'antd-pro-page-header-title',\n  'action': 'antd-pro-page-header-action',\n  'ant-btn-group': 'antd-pro-page-header-ant-btn-group',\n  'ant-btn': 'antd-pro-page-header-ant-btn',\n  'content': 'antd-pro-page-header-content',\n  'extraContent': 'antd-pro-page-header-extraContent',\n  'main': 'antd-pro-page-header-main'\n};\n\nvar getBreadcrumb = exports.getBreadcrumb = function getBreadcrumb(breadcrumbNameMap, url) {\n  var breadcrumb = breadcrumbNameMap[url];\n\n  if (!breadcrumb) {\n    Object.keys(breadcrumbNameMap).forEach(function (item) {\n      if ((0, _pathToRegexp2.default)(item).test(url)) {\n        breadcrumb = breadcrumbNameMap[item];\n      }\n    });\n  }\n\n  return breadcrumb || {};\n};\n\nvar BreadcrumbView = function (_PureComponent) {\n  _inherits(BreadcrumbView, _PureComponent);\n\n  function BreadcrumbView() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BreadcrumbView);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BreadcrumbView.__proto__ || Object.getPrototypeOf(BreadcrumbView)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      breadcrumb: null\n    }, _this.getBreadcrumbDom = function () {\n      var breadcrumb = _this.conversionBreadcrumbList();\n\n      _this.setState({\n        breadcrumb: breadcrumb\n      });\n    }, _this.getBreadcrumbProps = function () {\n      var _this$props = _this.props,\n          routes = _this$props.routes,\n          params = _this$props.params,\n          location = _this$props.location,\n          breadcrumbNameMap = _this$props.breadcrumbNameMap;\n      return {\n        routes: routes,\n        params: params,\n        routerLocation: location,\n        breadcrumbNameMap: breadcrumbNameMap\n      };\n    }, _this.conversionFromProps = function () {\n      var _this$props2 = _this.props,\n          breadcrumbList = _this$props2.breadcrumbList,\n          breadcrumbSeparator = _this$props2.breadcrumbSeparator,\n          itemRender = _this$props2.itemRender,\n          _this$props2$linkElem = _this$props2.linkElement,\n          linkElement = _this$props2$linkElem === undefined ? 'a' : _this$props2$linkElem;\n      return _react2.default.createElement(_breadcrumb2.default, {\n        className: styles.breadcrumb,\n        separator: breadcrumbSeparator\n      }, breadcrumbList.map(function (item) {\n        var title = itemRender ? itemRender(item) : item.title;\n        return _react2.default.createElement(_breadcrumb2.default.Item, {\n          key: item.title\n        }, item.href ? (0, _react.createElement)(linkElement, _defineProperty({}, linkElement === 'a' ? 'href' : 'to', item.href), title) : title);\n      }));\n    }, _this.conversionFromLocation = function (routerLocation, breadcrumbNameMap) {\n      var _this$props3 = _this.props,\n          breadcrumbSeparator = _this$props3.breadcrumbSeparator,\n          home = _this$props3.home,\n          itemRender = _this$props3.itemRender,\n          _this$props3$linkElem = _this$props3.linkElement,\n          linkElement = _this$props3$linkElem === undefined ? 'a' : _this$props3$linkElem; // Convert the url to an array\n\n      var pathSnippets = (0, _pathTools.urlToList)(routerLocation.pathname); // Loop data mosaic routing\n\n      var extraBreadcrumbItems = pathSnippets.map(function (url, index) {\n        var currentBreadcrumb = getBreadcrumb(breadcrumbNameMap, url);\n\n        if (currentBreadcrumb.inherited) {\n          return null;\n        }\n\n        var isLinkable = index !== pathSnippets.length - 1 && currentBreadcrumb.component;\n        var name = itemRender ? itemRender(currentBreadcrumb) : currentBreadcrumb.name;\n        return currentBreadcrumb.name && !currentBreadcrumb.hideInBreadcrumb ? _react2.default.createElement(_breadcrumb2.default.Item, {\n          key: url\n        }, (0, _react.createElement)(isLinkable ? linkElement : 'span', _defineProperty({}, linkElement === 'a' ? 'href' : 'to', url), name)) : null;\n      }); // Add home breadcrumbs to your head if defined\n\n      if (home) {\n        extraBreadcrumbItems.unshift(_react2.default.createElement(_breadcrumb2.default.Item, {\n          key: 'home'\n        }, (0, _react.createElement)(linkElement, _defineProperty({}, linkElement === 'a' ? 'href' : 'to', '/'), home)));\n      }\n\n      return _react2.default.createElement(_breadcrumb2.default, {\n        className: styles.breadcrumb,\n        separator: breadcrumbSeparator\n      }, extraBreadcrumbItems);\n    }, _this.conversionBreadcrumbList = function () {\n      var _this$props4 = _this.props,\n          breadcrumbList = _this$props4.breadcrumbList,\n          breadcrumbSeparator = _this$props4.breadcrumbSeparator;\n\n      var _this$getBreadcrumbPr = _this.getBreadcrumbProps(),\n          routes = _this$getBreadcrumbPr.routes,\n          params = _this$getBreadcrumbPr.params,\n          routerLocation = _this$getBreadcrumbPr.routerLocation,\n          breadcrumbNameMap = _this$getBreadcrumbPr.breadcrumbNameMap;\n\n      if (breadcrumbList && breadcrumbList.length) {\n        return _this.conversionFromProps();\n      } // 如果传入 routes 和 params 属性\n      // If pass routes and params attributes\n\n\n      if (routes && params) {\n        return _react2.default.createElement(_breadcrumb2.default, {\n          className: styles.breadcrumb,\n          routes: routes.filter(function (route) {\n            return route.breadcrumbName;\n          }),\n          params: params,\n          itemRender: _this.itemRender,\n          separator: breadcrumbSeparator\n        });\n      } // 根据 location 生成 面包屑\n      // Generate breadcrumbs based on location\n\n\n      if (routerLocation && routerLocation.pathname) {\n        return _this.conversionFromLocation(routerLocation, breadcrumbNameMap);\n      }\n\n      return null;\n    }, _this.itemRender = function (route, params, routes, paths) {\n      var _this$props$linkEleme = _this.props.linkElement,\n          linkElement = _this$props$linkEleme === undefined ? 'a' : _this$props$linkEleme;\n      var last = routes.indexOf(route) === routes.length - 1;\n      return last || !route.component ? _react2.default.createElement('span', null, route.breadcrumbName) : (0, _react.createElement)(linkElement, {\n        href: paths.join('/') || '/',\n        to: paths.join('/') || '/'\n      }, route.breadcrumbName);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(BreadcrumbView, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.getBreadcrumbDom();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(preProps) {\n      var location = this.props.location;\n\n      if (!location || !preProps.location) {\n        return;\n      }\n\n      var prePathname = preProps.location.pathname;\n\n      if (prePathname !== location.pathname) {\n        this.getBreadcrumbDom();\n      }\n    } // Generated according to props\n\n    /**\n     * 将参数转化为面包屑\n     * Convert parameters into breadcrumbs\n     */\n    // 渲染Breadcrumb 子节点\n    // Render the Breadcrumb child node\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var breadcrumb = this.state.breadcrumb;\n      return breadcrumb;\n    }\n  }]);\n\n  return BreadcrumbView;\n}(_react.PureComponent);\n\nexports.default = BreadcrumbView;","map":null,"metadata":{},"sourceType":"script"}