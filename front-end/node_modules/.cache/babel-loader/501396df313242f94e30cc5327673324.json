{"ast":null,"code":"import _classCallCheck from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/src/views/Administradores.js\";\nimport React, { Component } from 'react';\nimport { Icon, Button, Modal, Form, Input } from 'antd';\nimport DataTable from \"../components/DataTable\";\nimport API from \"../tools/API\";\nimport moment from 'moment';\nvar CollectionCreateForm = Form.create({\n  name: 'form_in_modal'\n})(\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_class, _React$Component);\n\n  function _class() {\n    _classCallCheck(this, _class);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n  }\n\n  _createClass(_class, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          onCancel = _this$props.onCancel,\n          onCreate = _this$props.onCreate,\n          form = _this$props.form,\n          loading = _this$props.loading;\n      var getFieldDecorator = form.getFieldDecorator;\n      return React.createElement(Modal, {\n        visible: visible,\n        title: \"Registro de nuevo administrador\",\n        okText: \"Enviar\",\n        onCancel: onCancel,\n        okButtonProps: {\n          disabled: loading,\n          loading: loading\n        },\n        onOk: onCreate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Form, {\n        layout: \"vertical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Nombre del administrador\",\n        type: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, getFieldDecorator('nombre', {\n        rules: [{\n          required: true,\n          message: 'Por favor introduce el nombre del administrador'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Correo electr\\xF3nico\",\n        type: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, getFieldDecorator('correo', {\n        rules: [{\n          required: true,\n          message: 'Por favor introduce su correo electrónico'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return _class;\n}(React.Component));\n\nvar Administradores =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Administradores, _Component);\n\n  function Administradores(props) {\n    var _this;\n\n    _classCallCheck(this, Administradores);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Administradores).call(this, props));\n    _this.state = {\n      visible: false\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleCancel = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.refreshData = function () {\n      _this.setState({\n        loading: true\n      });\n\n      API.restCall({\n        service: 'return_admins/',\n        method: \"get\",\n        params: \"\",\n        success: function success(response) {\n          _this.setState({\n            data: response,\n            loading: false\n          });\n        },\n        error: function error(response) {\n          _this.setState({\n            loading: false\n          });\n        }\n      });\n    };\n\n    _this.deleteAdmin = function (rows) {\n      _this.setState({\n        loading: true\n      });\n\n      API.call('eliminar_administradores/', {\n        admin: JSON.stringify(rows)\n      }, function (response) {\n        _this.setState({\n          loading: false\n        });\n\n        _this.refreshData();\n      }, function (response) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.showContent = function (record) {\n      var data = JSON.parse(record.contenido_subido);\n\n      _this.setState({\n        cols: data.cols,\n        data2: data.data,\n        visible: true,\n        record: record\n      });\n    };\n\n    _this.saveFormRef = function (formRef) {\n      _this.formRef = formRef;\n    };\n\n    _this.handleCreate = function () {\n      var form = _this.formRef.props.form;\n      form.validateFields(function (err, values) {\n        if (err) {\n          return;\n        }\n\n        _this.setState({\n          loading: true\n        });\n\n        form.resetFields();\n        API.call('agregar_administrador/', {\n          nombre: values.nombre,\n          email: values.correo\n        }, function (response) {\n          _this.setState({\n            visible: false\n          });\n\n          _this.setState({\n            loading: false\n          });\n\n          _this.refreshData();\n        }, function (response) {\n          _this.setState({\n            visible: false\n          });\n\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      data: [],\n      data2: [],\n      loading: true,\n      record: {},\n      cols: []\n    };\n    return _this;\n  }\n\n  _createClass(Administradores, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.refreshData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          float: 'right'\n        },\n        onClick: this.showModal,\n        type: \"secondary\",\n        icon: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Agregar administrador\"), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), \" Administradores\"), React.createElement(DataTable, {\n        loading: this.state.loading,\n        data: this.state.data,\n        deleteFunc: this.deleteAdmin,\n        rowSelection: true,\n        columns: [{\n          title: 'Nombre del administrador',\n          key: 'nombre'\n        }, {\n          title: 'Email',\n          key: 'email'\n        }, {\n          title: 'Último login',\n          key: 'last_login',\n          render: function render(text, record) {\n            return React.createElement(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 146\n              },\n              __self: this\n            }, moment(text).format('DD-MMM-YYYY')));\n          }\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(CollectionCreateForm, {\n        wrappedComponentRef: this.saveFormRef,\n        visible: this.state.visible,\n        loading: this.state.loading,\n        onCancel: this.handleCancel,\n        onCreate: this.handleCreate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Administradores;\n}(Component);\n\nexport { Administradores as default };","map":{"version":3,"sources":["/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/src/views/Administradores.js"],"names":["React","Component","Icon","Button","Modal","Form","Input","DataTable","API","moment","CollectionCreateForm","create","name","props","visible","onCancel","onCreate","form","loading","getFieldDecorator","disabled","rules","required","message","Administradores","state","showModal","setState","handleCancel","refreshData","restCall","service","method","params","success","response","data","error","deleteAdmin","rows","call","admin","JSON","stringify","showContent","record","parse","contenido_subido","cols","data2","saveFormRef","formRef","handleCreate","validateFields","err","values","resetFields","nombre","email","correo","float","title","key","render","text","textAlign","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Icon, Button, Modal, Form, Input\n} from 'antd';\nimport DataTable from \"../components/DataTable\";\nimport API from \"../tools/API\";\nimport moment from 'moment';\n\nconst CollectionCreateForm = Form.create({ name: 'form_in_modal' })(\n    class extends React.Component {\n      render() {\n        const {\n          visible, onCancel, onCreate, form, loading\n        } = this.props;\n        const { getFieldDecorator } = form;\n        return (\n            <Modal\n                visible={visible}\n                title=\"Registro de nuevo administrador\"\n                okText=\"Enviar\"\n                onCancel={onCancel}\n                okButtonProps={{ disabled: loading, loading:loading }}\n                onOk={onCreate}>\n                <Form layout=\"vertical\">\n                    <Form.Item label=\"Nombre del administrador\" type=\"user\">\n                        {getFieldDecorator('nombre', {\n                        rules: [{ required: true, message: 'Por favor introduce el nombre del administrador' }],\n                        })(\n                        <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"Correo electrónico\" type=\"email\">\n                        {getFieldDecorator('correo', {\n                        rules: [{ required: true, message: 'Por favor introduce su correo electrónico' }],\n                        })(\n                        <Input />\n                        )}\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )}\n    }\n);\n\nexport default class Administradores extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data:[],\n            data2:[],\n            loading:true,\n            record:{},\n            cols:[],\n        }\n    }\n\n    state = {\n        visible: false,\n    };\n\n    showModal = () => {\n        this.setState({ visible: true });\n    };\n    \n    handleCancel = () => {\n        this.setState({ visible: false });\n    };\n\n    refreshData = () => {\n        this.setState({loading:true});\n        API.restCall({\n            service:'return_admins/',\n            method: \"get\",\n            params: \"\",\n            success:(response) => {\n                this.setState({data: response, loading:false});\n            },\n            error:(response) => {this.setState({ loading: false })},\n        });\n    };\n\n    deleteAdmin = (rows) => {\n        this.setState({loading:true});\n        API.call('eliminar_administradores/',{admin:JSON.stringify(rows)}, (response) => {\n            this.setState({ loading:false});\n            this.refreshData();\n        }, (response) => {this.setState({ loading:false})});\n    };\n\n    componentWillMount() {\n        this.refreshData();\n    }\n\n    showContent = (record) => {\n        let data = JSON.parse(record.contenido_subido);\n        this.setState({cols:data.cols, data2:data.data, visible:true,record:record});\n    };\n\n    saveFormRef = (formRef) => {\n        this.formRef = formRef;\n    };\n\n    handleCreate = () => {\n        const form = this.formRef.props.form;\n    \n        form.validateFields((err, values) => {\n            if (err) {\n                return;\n            }\n    \n            this.setState({ loading: true });\n            form.resetFields();\n            API.call('agregar_administrador/', {nombre: values.nombre, email: values.correo}, (response) => {\n                this.setState({ visible: false  });\n                this.setState({ loading: false  });\n                this.refreshData();\n            }, (response) => {\n                this.setState({ visible: false  });\n                this.setState({ loading: false  });\n            });\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <Button style={{float:'right'}} onClick={this.showModal} type=\"secondary\" icon=\"plus\">\n                    Agregar administrador</Button>\n                <h1><Icon type=\"user\" /> Administradores</h1>\n                <DataTable loading={this.state.loading} data={this.state.data}\n                           deleteFunc={this.deleteAdmin} rowSelection={true}\n                columns={[{\n                    title: 'Nombre del administrador',\n                    key: 'nombre',\n\n                }, {\n                    title: 'Email',\n                    key: 'email',\n\n                }, {\n                    title: 'Último login',\n                    key: 'last_login',\n                    render: (text, record) => (\n                        <div style={{textAlign:'center'}}>\n                            <div>{moment(text).format('DD-MMM-YYYY')}</div>\n                        </div>\n                    )\n                }\n                ]}/>\n                <CollectionCreateForm\n                    wrappedComponentRef={this.saveFormRef}\n                    visible={this.state.visible}\n                    loading={this.state.loading}\n                    onCancel={this.handleCancel}\n                    onCreate={this.handleCreate}/>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}