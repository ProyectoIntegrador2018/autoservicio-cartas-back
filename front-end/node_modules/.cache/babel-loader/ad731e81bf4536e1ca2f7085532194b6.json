{"ast":null,"code":"import _classCallCheck from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/src/components/DataTable.js\";\nimport React, { Component } from 'react';\nimport { Table, Button, Popconfirm, Tag, Icon } from 'antd';\nimport { HeaderSearch } from 'ant-design-pro';\n\nvar DataTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataTable, _Component);\n\n  function DataTable(props) {\n    var _this;\n\n    _classCallCheck(this, DataTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataTable).call(this, props));\n\n    _this.prepareColumns = function (cols) {\n      var columns = [];\n      cols.map(function (val) {\n        columns.push({\n          title: val.title,\n          dataIndex: val.key,\n          key: val.key,\n          sorter: function sorter(a, b) {\n            if (a[val.key] < b[val.key]) {\n              return -1;\n            }\n\n            if (a[val.key] > b[val.key]) {\n              return 1;\n            }\n\n            return 0;\n          },\n          sortDirections: ['descend', 'ascend'],\n          render: val.render ? val.render : function (text, record) {\n            return React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52\n              },\n              __self: this\n            }, text);\n          }\n        });\n      });\n      return columns;\n    };\n\n    _this.getData = function () {\n      var newData = _this.state.dataSource.filter(function (v) {\n        for (var key in v) {\n          if ((v[key] || \"\").toString().toLowerCase().includes(_this.state.rowToSearch.toLowerCase())) return true;\n        }\n\n        return false;\n      });\n\n      return newData;\n    };\n\n    _this.state = {\n      results: false,\n      rowToSearch: \"\",\n      filteredSize: 0,\n      selectedRows: [],\n      dataSource: props.data || [],\n      columns: _this.prepareColumns(props.columns || []),\n      loading: props.loading || false,\n      deleteFunc: props.deleteFunc,\n      rowSelection: props.rowSelection || false,\n      selectedRowKeys: []\n    };\n    return _this;\n  }\n\n  _createClass(DataTable, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // only update chart if the data has changed\n      if (prevProps.data !== this.props.data || prevProps.columns !== this.props.columns || prevProps.loading !== this.props.loading) {\n        this.setState({\n          dataSource: this.props.data\n        });\n        this.setState({\n          loading: this.props.loading\n        });\n      }\n\n      if (prevProps.columns !== this.props.columns) {\n        this.setState({\n          columns: this.prepareColumns(this.props.columns || [])\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var selectedRowKeys = this.state.selectedRowKeys;\n      var rowSelection = {\n        selectedRowKeys: selectedRowKeys,\n        onChange: function onChange(selectedRowKeys, selectedRows) {\n          //console.log(selectedRows);\n          //console.log(selectedRowKeys);\n          _this2.setState({\n            selectedRows: selectedRows,\n            selectedRowKeys: selectedRowKeys\n          });\n        }\n      };\n      return React.createElement(Table, {\n        loading: this.state.loading,\n        locale: {\n          emptyText: React.createElement(\"div\", {\n            style: {\n              margin: '20px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            style: {\n              fontSize: '36px'\n            },\n            type: \"exception\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, \"No hay datos\"))\n        },\n        rowSelection: this.state.rowSelection ? rowSelection : false,\n        bordered: true,\n        size: 'middle',\n        dataSource: this.getData(),\n        columns: this.state.columns,\n        scroll: {\n          x: true\n        },\n        title: function title() {\n          return React.createElement(\"div\", {\n            style: {\n              textAlign: 'right',\n              marginRight: 10\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            style: {\n              float: 'left',\n              lineHeight: 2.5\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            hidden: _this2.state.selectedRows.length > 0,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, 'Total ' + _this2.state.dataSource.length)), React.createElement(\"span\", {\n            hidden: !(_this2.state.selectedRows.length > 1),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, React.createElement(Popconfirm, {\n            title: \"\\xBFEst\\xE1s seguro que deseas eliminar los elementos seleccionados? \",\n            okText: \"S\\xED\",\n            cancelText: \"No\",\n            onConfirm: function onConfirm() {\n              _this2.props.deleteFunc(_this2.state.selectedRows);\n\n              _this2.setState({\n                selectedRows: [],\n                selectedRowKeys: []\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"danger\",\n            className: 'button-danger',\n            icon: 'delete',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          })), \"\\xA0 \\xA0\", '  ' + _this2.state.selectedRows.length + ' elementos seleccionados de un total de ' + _this2.state.dataSource.length), React.createElement(\"span\", {\n            hidden: !(_this2.state.selectedRows.length === 1),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, React.createElement(Popconfirm, {\n            title: \"\\xBFEst\\xE1s seguro que deseas eliminar los elementos seleccionados? \",\n            okText: \"S\\xED\",\n            cancelText: \"No\",\n            onConfirm: function onConfirm() {\n              _this2.props.deleteFunc(_this2.state.selectedRows);\n\n              _this2.setState({\n                selectedRows: [],\n                selectedRowKeys: []\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"danger\",\n            className: 'button-danger',\n            icon: 'delete',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          })), \"\\xA0 \\xA0\", '  ' + _this2.state.selectedRows.length + ' elemento seleccionado de un total de ' + _this2.state.dataSource.length)), React.createElement(\"span\", {\n            hidden: !_this2.state.results,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, 'Mostrando ' + _this2.getData().length + ' de ' + _this2.state.dataSource.length + ' resultados para ', React.createElement(Tag, {\n            closable: true,\n            visible: true,\n            onClose: function onClose() {\n              _this2.setState({\n                results: false,\n                rowToSearch: \"\"\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, _this2.state.rowToSearch)), React.createElement(HeaderSearch, {\n            placeholder: \"Buscar...\",\n            dataSource: [],\n            onSearch: function onSearch(value) {\n              if (value === \"\") _this2.setState({\n                rowToSearch: value,\n                results: false\n              });else _this2.setState({\n                rowToSearch: value,\n                results: true\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DataTable;\n}(Component);\n\nexport { DataTable as default };\nDataTable.defaultProps = {\n  deleteFunc: function deleteFunc(rows) {}\n};","map":{"version":3,"sources":["/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/src/components/DataTable.js"],"names":["React","Component","Table","Button","Popconfirm","Tag","Icon","HeaderSearch","DataTable","props","prepareColumns","cols","columns","map","val","push","title","dataIndex","key","sorter","a","b","sortDirections","render","text","record","getData","newData","state","dataSource","filter","v","toString","toLowerCase","includes","rowToSearch","results","filteredSize","selectedRows","data","loading","deleteFunc","rowSelection","selectedRowKeys","prevProps","prevState","setState","onChange","emptyText","margin","fontSize","x","textAlign","marginRight","float","lineHeight","length","value","defaultProps","rows"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Table, Button, Popconfirm,Tag,Icon\n} from 'antd';\nimport {\n    HeaderSearch\n} from 'ant-design-pro';\n\nexport default class DataTable extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: false,\n            rowToSearch:\"\",\n            filteredSize: 0,\n            selectedRows:[],\n            dataSource: props.data || [],\n            columns: this.prepareColumns(props.columns || []),\n            loading: props.loading || false,\n            deleteFunc: props.deleteFunc,\n            rowSelection: props.rowSelection || false,\n            selectedRowKeys:[]\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // only update chart if the data has changed\n        if (prevProps.data !== this.props.data ||\n            prevProps.columns !== this.props.columns ||\n            prevProps.loading !== this.props.loading ) {\n            this.setState({dataSource: this.props.data});\n            this.setState({loading: this.props.loading});\n\n        }\n        if (prevProps.columns !== this.props.columns  ) {\n            this.setState({columns:  this.prepareColumns(this.props.columns || [])});\n        }\n    }\n\n    prepareColumns = (cols) => {\n        let columns = [];\n        cols.map(function(val) {\n            columns.push({title: val.title,\n                dataIndex: val.key,\n                key: val.key,\n                sorter: (a, b) => {\n                    if(a[val.key] < b[val.key]) { return -1; }\n                    if(a[val.key] > b[val.key]) { return 1; }\n                    return 0},\n                sortDirections: ['descend', 'ascend'],\n                render: val.render ?  val.render  : (text, record) => (<span>{text}</span>)\n            });\n        });\n        return columns;\n    };\n\n    getData = () => {\n        let newData = this.state.dataSource.filter((v) => {\n            for (let key in v) {\n                if ((v[key] || \"\").toString().toLowerCase().includes(this.state.rowToSearch.toLowerCase()))\n                    return true;\n            }\n            return false;\n        });\n        return newData;\n    };\n\n    render() {\n        const { selectedRowKeys } = this.state;\n        let rowSelection = {\n            selectedRowKeys,\n            onChange: (selectedRowKeys, selectedRows) => {\n                //console.log(selectedRows);\n                //console.log(selectedRowKeys);\n                this.setState({selectedRows:selectedRows, selectedRowKeys:selectedRowKeys});\n            }\n        };\n\n        return (\n            <Table loading={this.state.loading}\n                locale={{ emptyText: (<div style={{margin:'20px'}}><Icon style={{ fontSize: '36px' }} type=\"exception\" /><br/><b>No hay datos</b></div>) }}\n                rowSelection={this.state.rowSelection ? rowSelection: false} bordered size={'middle'} dataSource={this.getData()}\n                    columns={this.state.columns} scroll={{x:true}}\n                    title={() => (\n                        <div style={{textAlign:'right', marginRight:10}}>\n                            <div style={{float:'left',lineHeight: 2.5}}>\n\n                                <span hidden={this.state.selectedRows.length > 0}>\n                                    <b>{'Total ' + this.state.dataSource.length}</b>\n                                </span>\n\n                                <span hidden={!(this.state.selectedRows.length > 1)}>\n                                    <Popconfirm title=\"¿Estás seguro que deseas eliminar los elementos seleccionados? \"\n                                                okText=\"Sí\" cancelText=\"No\"\n                                                onConfirm={() => {this.props.deleteFunc(this.state.selectedRows);  this.setState({selectedRows:[],selectedRowKeys:[]});}}\n                                    >\n                                        <Button type=\"danger\" className={'button-danger'} icon={'delete'}/>\n                                    </Popconfirm>\n                                    &nbsp; &nbsp;{'  ' + this.state.selectedRows.length+ ' elementos seleccionados de un total de ' + this.state.dataSource.length }\n\n\n                                </span>\n                                <span hidden={!(this.state.selectedRows.length === 1)}>\n                                    <Popconfirm title=\"¿Estás seguro que deseas eliminar los elementos seleccionados? \"\n                                                okText=\"Sí\" cancelText=\"No\"\n                                                onConfirm={() => {this.props.deleteFunc(this.state.selectedRows);  this.setState({selectedRows:[],selectedRowKeys:[]});}}\n                                    >\n                                        <Button type=\"danger\" className={'button-danger'} icon={'delete'}/>\n                                    </Popconfirm>\n                                    &nbsp; &nbsp;{'  ' + this.state.selectedRows.length+ ' elemento seleccionado de un total de ' + this.state.dataSource.length}\n                                </span>\n\n                            </div>\n\n                            <span hidden={!this.state.results}>\n                                    {'Mostrando '+ this.getData().length+ ' de ' + this.state.dataSource.length + ' resultados para '}\n                                <Tag closable visible={true}\n                                    onClose={() => {this.setState({results:false,rowToSearch:\"\"})}}>\n                                    {this.state.rowToSearch}</Tag>\n                                </span>\n\n                            <HeaderSearch\n                                placeholder=\"Buscar...\"\n                                dataSource={[]}\n                                onSearch={(value) => {\n                                    if (value === \"\")\n                                        this.setState({rowToSearch:value,results:false});\n                                    else\n                                        this.setState({rowToSearch:value,results:true});\n                                }}/>\n                        </div>)}\n                />\n        );\n    }\n}\n\nDataTable.defaultProps = {\n    deleteFunc: (rows) => {},\n};"]},"metadata":{},"sourceType":"module"}