{"ast":null,"code":"import _classCallCheck from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/src/views/DocumentosSubir.js\";\nimport React, { Component } from 'react';\nimport { Icon, Upload, message, Select, Divider, Button } from 'antd';\nimport DataTable from \"../components/DataTable\";\nimport API from \"../tools/API\";\nimport Notifications from \"../tools/Notifications\";\n\nvar Documentos =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Documentos, _Component);\n\n  function Documentos(props) {\n    var _this;\n\n    _classCallCheck(this, Documentos);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Documentos).call(this, props));\n\n    _this.refreshData = function () {\n      _this.setState({\n        loading: true\n      });\n\n      API.call('procesos/', [], function (response) {\n        _this.setState({\n          data: response,\n          loading: false\n        });\n      });\n    };\n\n    _this.uploadData = function () {\n      var csv = JSON.stringify({\n        data: _this.state.dataTable,\n        cols: _this.state.columns\n      });\n\n      if (_this.state.id_proceso == undefined || csv == undefined || csv == \"\" || _this.state.fileName == undefined || _this.state.fileName == \"\") {\n        Notifications.openNotificationWithIcon(\"warning\", \"Verifica que todos los campos estén completos\", \"\");\n      } else {\n        API.call('subir-documento/', {\n          proceso: _this.state.id_proceso,\n          filename: _this.state.fileName,\n          content: csv\n        }, function (resposne) {\n          Notifications.openNotificationWithIcon(\"success\", \"¡Información cargada exitosamente!\", \"\");\n          API.redirectTo('/documentos');\n        });\n      }\n    };\n\n    _this.parseFile = function (file) {\n      _this.setState({\n        fileName: file.name\n      });\n\n      var Papa = require(\"papaparse/papaparse.min.js\");\n\n      Papa.parse(file, {\n        header: false,\n        download: true,\n        skipEmptyLines: true,\n        complete: _this.updateData\n      });\n    };\n\n    _this.updateData = function (result) {\n      var data = result.data; // Here this is available and we can call this.setState (since it's binded in the constructor)\n      // or shorter ES syntax: this.setState({ data });\n\n      if (_this.state.columns && _this.state.columns.length > 0) {\n        var dataT = [];\n        data.splice(1).map(function (item, index) {\n          var row = {};\n\n          _this.state.columns.map(function (col) {\n            row[col.key] = item[col.llave];\n          });\n\n          dataT.push(row);\n        });\n\n        _this.setState({\n          dataTable: dataT\n        });\n      }\n    };\n\n    _this.handleChange = function (value) {\n      if (value != null) {\n        var cols = [];\n\n        _this.setState({\n          disabled: false,\n          proceso: _this.state.data[value],\n          loadingTable: false\n        });\n\n        cols.push({\n          key: \"ticket\",\n          title: '# Ticket',\n          llave: _this.state.data[value].columna_ticket\n        });\n        cols.push({\n          key: \"matricula\",\n          title: 'Matrícula',\n          llave: _this.state.data[value].columna_matricula\n        });\n        cols.push({\n          key: \"fecha_apertura\",\n          title: 'Fecha de apertura',\n          llave: _this.state.data[value].columna_fecha_inicio\n        });\n        cols.push({\n          key: \"fecha_ultima\",\n          title: 'Fecha de última actualización',\n          llave: _this.state.data[value].columna_fecha_ultima_actualizacion\n        });\n\n        _this.setState({\n          id_proceso: _this.state.data[value].id\n        });\n\n        API.call('pasos-procesos/', {\n          proceso: _this.state.data[value].id\n        }, function (resposne) {\n          resposne.map(function (val) {\n            cols.push({\n              key: \"paso_\" + val.numero,\n              title: val.nombre_mostrar,\n              llave: val.columna_csv\n            });\n          });\n\n          _this.setState({\n            columns: cols\n          });\n        });\n      }\n    };\n\n    _this.state = {\n      loading: true,\n      data: [],\n      dataTable: [],\n      columns: [],\n      disabled: true,\n      proceso: {},\n      loadingTable: false,\n      fileName: \"\",\n      id_proceso: undefined\n    };\n    return _this;\n  }\n\n  _createClass(Documentos, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.refreshData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Select, {\n        loading: this.state.loading,\n        showSearch: true,\n        style: {\n          width: '100%',\n          marginBottom: 20\n        },\n        placeholder: \"Selecciona un proceso\",\n        optionFilterProp: \"children\",\n        onChange: this.handleChange,\n        filterOption: function filterOption(input, option) {\n          return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.state.data.map(function (val, index) {\n        return React.createElement(Select.Option, {\n          value: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, val.nombre);\n      })), React.createElement(Upload.Dragger, {\n        beforeUpload: function beforeUpload(file, fileList) {\n          _this2.parseFile(file);\n\n          return false;\n        },\n        disabled: this.state.disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"ant-upload-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Haz clic o arrastra un documento en esta \\xE1rea\"), React.createElement(\"p\", {\n        className: \"ant-upload-hint\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"El sistema solo soporta archivos CSV\")), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Previsualizaci\\xF3n de datos\"), React.createElement(DataTable, {\n        loading: this.state.loadingTable,\n        data: this.state.dataTable,\n        columns: this.state.columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.uploadData,\n        style: {\n          marginTop: 10\n        },\n        className: 'button-success',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: 'upload',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), \" Subir datos\")));\n    }\n  }]);\n\n  return Documentos;\n}(Component);\n\nexport { Documentos as default };","map":{"version":3,"sources":["/mnt/c/Users/oscar/Documents/autoservicio-cartas-back/front-end/src/views/DocumentosSubir.js"],"names":["React","Component","Icon","Upload","message","Select","Divider","Button","DataTable","API","Notifications","Documentos","props","refreshData","setState","loading","call","response","data","uploadData","csv","JSON","stringify","state","dataTable","cols","columns","id_proceso","undefined","fileName","openNotificationWithIcon","proceso","filename","content","resposne","redirectTo","parseFile","file","name","Papa","require","parse","header","download","skipEmptyLines","complete","updateData","result","length","dataT","splice","map","item","index","row","col","key","llave","push","handleChange","value","disabled","loadingTable","title","columna_ticket","columna_matricula","columna_fecha_inicio","columna_fecha_ultima_actualizacion","id","val","numero","nombre_mostrar","columna_csv","width","marginBottom","input","option","children","toLowerCase","indexOf","nombre","fileList","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Icon, Upload, message, Select, Divider,Button\n} from 'antd';\nimport DataTable from \"../components/DataTable\";\nimport API from \"../tools/API\";\nimport Notifications from \"../tools/Notifications\";\n\nexport default class Documentos extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading:true,\n            data: [],\n            dataTable: [],\n            columns: [],\n            disabled: true,\n            proceso: {},\n            loadingTable:false,\n            fileName:\"\",\n            id_proceso:undefined\n        }\n    }\n\n    refreshData = () => {\n        this.setState({loading:true});\n        API.call('procesos/',[], (response) => {\n\n            this.setState({data: response, loading:false});\n        });\n    };\n\n    componentWillMount() {\n        this.refreshData();\n    }\n\n    uploadData = () => {\n        let csv = JSON.stringify({data: this.state.dataTable, cols: this.state.columns });\n        if (this.state.id_proceso == undefined  ||   csv == undefined || csv == \"\" ||\n             this.state.fileName == undefined ||\n            this.state.fileName == \"\" ) {\n            Notifications.openNotificationWithIcon(\"warning\",\"Verifica que todos los campos estén completos\",\"\")\n        } else {\n            API.call('subir-documento/',{proceso: this.state.id_proceso, filename:this.state.fileName, content: csv}, (resposne) => {\n                Notifications.openNotificationWithIcon(\"success\",\"¡Información cargada exitosamente!\",\"\")\n                API.redirectTo('/documentos');\n            });\n        }\n    };\n\n    parseFile = (file) => {\n        this.setState({fileName:file.name});\n        let Papa = require(\"papaparse/papaparse.min.js\");\n        Papa.parse(file, {\n            header: false,\n            download: true,\n            skipEmptyLines: true,\n            complete: this.updateData\n        });\n    };\n\n    updateData = (result) => {\n        const data = result.data;\n        // Here this is available and we can call this.setState (since it's binded in the constructor)\n        // or shorter ES syntax: this.setState({ data });\n        if (this.state.columns && this.state.columns.length > 0) {\n            let dataT = [];\n            data.splice(1).map((item,index) => {\n                let row = {};\n                this.state.columns.map((col) => {\n                    row[col.key] = item[col.llave];\n                });\n                dataT.push(row);\n            });\n            this.setState({dataTable: dataT});\n        }\n    };\n\n    handleChange = (value) => {\n        if (value != null) {\n            let cols = [];\n            this.setState({disabled: false, proceso: this.state.data[value], loadingTable: false});\n            cols.push({key:\"ticket\",title:'# Ticket',llave:this.state.data[value].columna_ticket});\n            cols.push({key:\"matricula\",title:'Matrícula',llave:this.state.data[value].columna_matricula});\n            cols.push({key:\"fecha_apertura\",title:'Fecha de apertura',llave:this.state.data[value].columna_fecha_inicio});\n            cols.push({key:\"fecha_ultima\",title:'Fecha de última actualización',llave:this.state.data[value].columna_fecha_ultima_actualizacion});\n            this.setState({id_proceso: this.state.data[value].id});\n            API.call('pasos-procesos/',{proceso: this.state.data[value].id}, (resposne) => {\n                resposne.map((val) => {\n                    cols.push({key:\"paso_\" + val.numero, title:val.nombre_mostrar, llave:val.columna_csv});\n                });\n                this.setState({columns: cols});\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <Select\n                    loading={this.state.loading}\n                    showSearch\n                    style={{ width: '100%', marginBottom:20 }}\n                    placeholder=\"Selecciona un proceso\"\n                    optionFilterProp=\"children\"\n                    onChange={this.handleChange}\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >\n                    {this.state.data.map((val,index) => (<Select.Option value={index}>{val.nombre}</Select.Option>))}\n                </Select>\n                <Upload.Dragger\n                    beforeUpload={(file, fileList) => {this.parseFile(file);return false;}}\n                    disabled={this.state.disabled}>\n                    <p className=\"ant-upload-drag-icon\">\n                        <Icon type=\"upload\" />\n                    </p>\n                    <p className=\"ant-upload-text\">Haz clic o arrastra un documento en esta área</p>\n                    <p className=\"ant-upload-hint\">El sistema solo soporta archivos CSV</p>\n                </Upload.Dragger>\n\n                <Divider/>\n                <h2>Previsualización de datos</h2>\n                <DataTable loading={this.state.loadingTable} data={this.state.dataTable} columns={this.state.columns}/>\n                <div style={{textAlign:'right'}}>\n                    <Button onClick={this.uploadData} style={{marginTop:10}} className={'button-success'}><Icon type={'upload'}/> Subir datos</Button>\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}